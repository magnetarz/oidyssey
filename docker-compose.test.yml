version: '3.8'

services:
  # SNMP Emulator - Acts as SNMP agent for testing SNMP GET/SET operations
  snmp-emulator:
    image: cyberwatch/snmp-emulator:latest
    container_name: oidyssey-snmp-emulator
    ports:
      - "161:161/udp"  # SNMP agent port
      - "1161:1161/udp"  # Alternative SNMP port for testing
    environment:
      - SNMP_COMMUNITY=public
      - SNMP_COMMUNITY_WRITE=private
    networks:
      - snmp-test-network
    volumes:
      - ./test/snmp-emulator/mibs:/usr/share/snmp/mibs:ro
    healthcheck:
      test: ["CMD", "snmpget", "-v", "2c", "-c", "public", "localhost", "1.3.6.1.2.1.1.1.0"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  # SNMP Trap Receiver - Receives and logs SNMP traps for validation
  trap-receiver:
    image: cyberwatch/snmp-emulator:latest
    container_name: oidyssey-trap-receiver
    command: >
      sh -c "
      echo 'Starting SNMP trap receiver on port 162...' &&
      snmptrapd -f -Lo -c /etc/snmp/snmptrapd.conf
      "
    ports:
      - "162:162/udp"  # SNMP trap port
      - "1162:1162/udp"  # Alternative trap port for testing
    environment:
      - SNMP_COMMUNITY=public
    networks:
      - snmp-test-network
    volumes:
      - ./test/snmp-config/snmptrapd.conf:/etc/snmp/snmptrapd.conf:ro
      - ./test/logs:/var/log/snmp:rw
    healthcheck:
      test: ["CMD", "pgrep", "snmptrapd"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Python Test Runner - Executes SNMP trap sender scripts
  test-runner:
    build:
      context: .
      dockerfile: test/Dockerfile.test
    container_name: oidyssey-test-runner
    depends_on:
      snmp-emulator:
        condition: service_healthy
      trap-receiver:
        condition: service_healthy
    environment:
      - SNMP_HOST=snmp-emulator
      - SNMP_PORT=161
      - TRAP_HOST=trap-receiver
      - TRAP_PORT=162
      - SNMP_COMMUNITY=public
      - PYTHONUNBUFFERED=1
    networks:
      - snmp-test-network
    volumes:
      - ./test/snmp-traps:/app/tests:ro
      - ./test/results:/app/results:rw
    command: >
      sh -c "
      echo 'Waiting for services to be ready...' &&
      sleep 5 &&
      echo 'Running SNMP trap tests...' &&
      python /app/tests/trap-sender.py trap-receiver 162 &&
      echo 'Running comprehensive trap tests...' &&
      python /app/tests/test-trap-sender.py --host trap-receiver --port 162 --test all &&
      echo 'Tests completed. Check results in /app/results/'
      "

  # n8n Instance for Testing SNMP Nodes
  n8n:
    image: n8nio/n8n:latest
    container_name: oidyssey-n8n-test
    ports:
      - "5678:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=false
      - N8N_HOST=0.0.0.0
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - WEBHOOK_URL=http://n8n:5678/
      - N8N_LOG_LEVEL=debug
      - NODE_FUNCTION_ALLOW_BUILTIN=*
      - NODE_FUNCTION_ALLOW_EXTERNAL=*
    networks:
      - snmp-test-network
    volumes:
      - ./dist:/home/node/.n8n/custom:ro
      - n8n-data:/home/node/.n8n
    depends_on:
      - snmp-emulator
      - trap-receiver
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:5678/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # SNMP Walk Test - Performs SNMP walk operations for validation
  snmp-walker:
    image: polinux/snmpd:alpine
    container_name: oidyssey-snmp-walker
    depends_on:
      snmp-emulator:
        condition: service_healthy
    networks:
      - snmp-test-network
    volumes:
      - ./test/scripts:/scripts:ro
      - ./test/results:/results:rw
    command: >
      sh -c "
      echo 'Waiting for SNMP emulator...' &&
      sleep 10 &&
      echo 'Performing SNMP walk on emulator...' &&
      snmpwalk -v 2c -c public snmp-emulator 1.3.6.1.2.1.1 > /results/snmpwalk-system.txt &&
      echo 'SNMP walk completed. Results saved to /results/snmpwalk-system.txt' &&
      echo 'Testing SNMP GET operations...' &&
      snmpget -v 2c -c public snmp-emulator 1.3.6.1.2.1.1.1.0 > /results/snmpget-sysdescr.txt &&
      snmpget -v 2c -c public snmp-emulator 1.3.6.1.2.1.1.3.0 > /results/snmpget-sysuptime.txt &&
      echo 'SNMP GET tests completed.'
      "

networks:
  snmp-test-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/24

volumes:
  n8n-data: